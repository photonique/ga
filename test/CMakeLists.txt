option(GA_TEST_COVERAGE "whether or not add coverage instrumentation" OFF)

foreach(_test simplest simple knapsack multi rastrigin version)
  add_executable(ga_${_test} ${_test}.cpp)
  set_target_properties(ga_${_test} PROPERTIES CXX_STANDARD_REQUIRED ON CXX_EXTENSIONS OFF)

  if (GA_TEST_COVERAGE)
    target_compile_options(ga_${_test} PRIVATE "$<$<CONFIG:DEBUG>:-O0>")
    target_compile_options(ga_${_test} PRIVATE "$<$<CONFIG:DEBUG>:--coverage>")
    set_target_properties(ga_${_test} PROPERTIES LINK_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} --coverage")
  else()
    target_compile_options(ga_${_test} PRIVATE "$<$<CONFIG:DEBUG>:-O0>")
    target_compile_options(ga_${_test} PRIVATE "$<$<CONFIG:DEBUG>:-fno-omit-frame-pointer>")
    target_compile_options(ga_${_test} PRIVATE "$<$<CONFIG:DEBUG>:-fsanitize=address,leak,undefined>")
    set_target_properties(ga_${_test} PROPERTIES LINK_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=address,leak,undefined -fuse-ld=gold")
  endif()

  target_link_libraries(ga_${_test} PUBLIC ga)

  if(MSVC)
    if(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
      string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    else()
      target_compile_options(ga_${_test} PRIVATE "/W4")
    endif()
  elseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    target_compile_options(ga_${_test} PRIVATE -Wall -Wextra -Werror -pedantic)
  endif()

  add_test(NAME test.ga.${_test} COMMAND ga_${_test})
endforeach()
